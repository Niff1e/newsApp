// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios17.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name InternetManager
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import InternetManager
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol URLSessionProtocol {
  func dataTask(with url: Foundation.URL, completionHandler: @escaping (Foundation.Data?, Foundation.URLResponse?, (any Swift.Error)?) -> Swift.Void) -> any InternetManager.URLSessionDataTaskProtocol
}
final public class InternetManager : InternetManager.InternetManagerProtocol {
  public init(_ session: any InternetManager.URLSessionProtocol = URLSession.shared)
  final public func downloadImage(with url: Foundation.URL, completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  final public func getData(with url: Foundation.URL?, completion: @escaping (Foundation.Data?) -> Swift.Void)
  @objc deinit
}
extension Foundation.URLSession : InternetManager.URLSessionProtocol {
  public func dataTask(with url: Foundation.URL, completionHandler: @escaping (Foundation.Data?, Foundation.URLResponse?, (any Swift.Error)?) -> Swift.Void) -> any InternetManager.URLSessionDataTaskProtocol
}
extension Foundation.URLSessionDataTask : InternetManager.URLSessionDataTaskProtocol {
}
public protocol URLSessionDataTaskProtocol {
  func resume()
}
public protocol InternetManagerProtocol {
  func downloadImage(with url: Foundation.URL, completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  func getData(with url: Foundation.URL?, completion: @escaping (Foundation.Data?) -> Swift.Void)
}
